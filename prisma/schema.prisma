datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

//datasource mysqldb {
//  provider = "mysql"
//  url      = env("MYSQL_DATABASE_URL")
//}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  trainings Training[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Equipment {
    id    String @id @default(cuid())
    name  String
    muscle String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    test Boolean @default(false)
    exercises Exercise[]
}

model ExerciseSet {
   id    String @id @default(cuid())
   excercises Exercise[]
}

model Exercise {
    id    String @id @default(cuid())
    notes String? @default("")
    weight Int @default(0)
    repeatCount Int @default(0)
    duration String? @default("")
    equipment   Equipment @relation(fields: [equipmentId], references: [id])
    equipmentId String

    exerciseSet ExerciseSet? @relation(fields: [exerciseSetId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    exerciseSetId String?

    training Training @relation(fields: [trainingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    trainingId String
}

model Training {
   id    String @id @default(cuid())
   exercises Exercise[]
   executedAt DateTime @default(now())

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
   userId String
}
